package com.basics.java;

/*
 * Thread can be defined by implementing Runnable interface directly
 * FOR EVERY THREAD JVM WILL CREATE A NEW STACK
 * Runnable interface is present in java.lang package and contains only run method
 * Thread class Constructors: 
 * - Thread t= new Thread();
 * - Thread t= new Thread(Runnable r);
 * - Thread t= new Thread(String nameOfThread);
 * - Thread t= new Thread(Runnable r, String nameOfThread);
 * - Thread t= new Thread(ThreadGroup tg, String nameOfThread);
 * - Thread t= new Thread(ThreadGroup tg, Runnable r);
 * - Thread t= new Thread(ThreadGroup tg, Runnable r, String nameOfThread);
 * - Thread t= new Thread(ThreadGroup tg, Runnable r, String nameOfThread, long stackSize);
 * Every thread in java has some name. Explicitly provided or generated by JVM
 * */
public class ThreadBasicsAndRunnableInterface {
    public static void main(String[] args) {
        MyRunnable r = new MyRunnable();
        HybridApproach td = new HybridApproach();
        System.out.println("Thread Name " + td.getName());
        Thread thread = new Thread(r); // Here t is the target runnable
        Thread thread1 = new Thread(td); // Here td is a class extending Thread class which in turn implements runnable
        thread1.start();
        //Thread thread1 = new Thread();
        //thread1.run(); // No new thread will be created and run method will be direct method call
        //thread1.start(); // New thread is created and is responsible to execute run method of thread class which has empty implementation.
        thread.start();
        //thread.run(); // No new thread will be created and run method will be direct method call
        //r.run(); // No new thread will be created and run method will be direct method call
        System.out.println("Main thread");
        System.out.println(Thread.currentThread().getName());
        Thread.currentThread().setName("GopalThread");
        System.out.println("New name Thread: "+ Thread.currentThread().getName());
        System.out.println(Thread.currentThread().getName());
   }
}

class MyRunnable implements Runnable {
    public void run() {
        System.out.println("Implementing runnable interface");
    }
}

class HybridApproach extends Thread {
    public void run() {
        System.out.println("Extending Thread Class by thread " + super.currentThread().getName());
    }
}

class ThreadName extends Thread {
    
}
